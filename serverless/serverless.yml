service: customAuthorizer

provider:
  name: aws
  runtime: nodejs10.x
  cfLogs: true
  timeout: 20
  stage: ${opt:stage, 'development'}
  region: ${opt:region, 'eu-west-1'}
  profile: ${opt:profile, ''}
  environment:
    AUTH0_DOMAIN: pandle-net.eu.auth0.com
    AUDIENCE: pandle-net.eu.auth0.com
    JWKS_URI: https://pandle-net.eu.auth0.com/.well-known/jwks.json
    TOKEN_ISSUER: https://pandle-net.eu.auth0.com/
  stackTags:
    Saving: ${self:custom.savingTags.saving.${self:provider.stage}, self:custom.savingTags.saving.default}
    Delete: ${self:custom.savingTags.delete.${self:provider.stage}, self:custom.savingTags.delete.default} 
  tags:
    Saving: ${self:custom.savingTags.saving.${self:provider.stage}, self:custom.savingTags.saving.default}
    Delete: ${self:custom.savingTags.delete.${self:provider.stage}, self:custom.savingTags.delete.default}

plugins:
  - serverless-webpack

custom:
  webpackIncludeModules: true # enable auto including node_modules
  graphiql:
    babelOptions:
      presets: [es2015, es2016, stage-0]
      plugins: [transform-runtime]  
  savingTags:
    saving:
      production: Disabled
      default: Enabled
    delete:
      production: '0 18 30 2 .' # for added safety, a non-existent day
      default: '0 18 . . .' # for deleting at any evening

functions:
  customAuthorizer:
    handler: handler.auth
  public:
    handler: handler.public
    events:
      - http:
          path: public
          method: get
          integration: lambda
          cors: true
  private:
    handler: handler.private
    events:
      - http:
          path: private
          method: get
          integration: lambda
          authorizer: customAuthorizer
          cors: true
